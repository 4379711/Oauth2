server:
  port: 9100

spring:
  application:
    name: mygateway
  redis:
    port: 63790
    host: 127.0.0.1
    password: liuyalong
    database: 1

  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848

    gateway:
      globalcors:
        cors-configurations:
          '[/**]': # 匹配所有请求
            allowedOrigins: "*" #跨域处理,运行所有域
            allowedMethods: # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      routes:
        # 唯一标识符(最好和服务名保持一致)
        - id: mytest #注意下面的配置缩进,和好像和id同级缩进也不会报错
          # 指定要路由的服务
          #          uri: http://localhost:7100
          # lb:使用LoadBalancerClient实现负载均衡,后面mytest是微服务的名称(主要用于集群环境)
          uri: lb://mytest
          # 路由规则配置
          predicates:
            # 所有请求请求localhost的请求,全部路由到上面的uri
            - Host=localhost**
            # 所有以/api/test的请求,都被路由到上面的uri
            - Path=/api/test/**
          filters:
            #将请求路径中的第一个路径去掉(即去掉/api),路径以/区分
            - StripPrefix=1
            # 限流
            - name: RequestRateLimiter #请求数限流 名字不能随便写
              # 下面的配置有问题,会不起作用,会一直等2s,已找到原因,配置redis即可
              args:
                # 用户身份唯一标识符,ipKeyResolver和Bean的名字对应,
                key-resolver: "#{@ipKeyResolver}"
                # 每秒允许几个请求
                redis-rate-limiter.replenishRate: 1
                # 请求并发数量[宽限的个数]
                redis-rate-limiter.burstCapacity: 1
management:
  endpoint:
    gateway:
      enabled: true
    web:
      exposure:
        include: true